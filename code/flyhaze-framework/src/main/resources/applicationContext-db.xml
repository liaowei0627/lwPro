<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
    default-autowire="byName">

    <description>Spring数据层配置 </description>

    <!-- 定义受环境影响易变的变量 -->
    <context:property-placeholder ignore-unresolvable="true" local-override="true" location="classpath*:application-db.properties" />
    <context:component-scan base-package="com.flyhaze.**.dao">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
    </context:component-scan>

    <!-- 定义数据源 -->
    <!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="connectionProperties" value="${jdbc.connectionProperties}" />

        <property name="initialSize" value="${dbcp.initialSize}" />
        <property name="maxTotal" value="${dbcp.maxTotal}" />
        <property name="minIdle" value="${dbcp.minIdle}" />
        <property name="maxIdle" value="${dbcp.maxIdle}" />
        <property name="maxWaitMillis" value="${dbcp.maxWaitMillis}" />
        <property name="validationQuery" value="${dbcp.validationQuery}" />
        <property name="validationQueryTimeout" value="${dbcp.validationQueryTimeout}" />

        <property name="timeBetweenEvictionRunsMillis" value="${dbcp.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${dbcp.minEvictableIdleTimeMillis}" />
    </bean>

    <!-- Hibernate配置 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.flyhaze.**.entity" />
        <property name="physicalNamingStrategy">
            <bean class="org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy" />
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.use_sql_comments}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
            </props>
        </property>
    </bean>
    <!-- 定义事务管理器 -->
    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <!-- 申明annotation 加载事务驱动 proxy-target-class="true" -->
    <tx:annotation-driven transaction-manager="txManager" />
    <!-- 声明式事务管理配置 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="upd*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="del*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="create*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="load*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <!-- 定义AOP配置 -->
    <aop:config>
        <!-- 定义一个切入点 -->
        <aop:pointcut id="services" expression="execution(* com.flyhaze.**.service.impl.*.*(..))" />
        <!-- 对切入点和事务的通知，进行适配 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="services" />
    </aop:config>

    <!-- 启用@AspectJ 支持 -->
    <bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />

    <aop:aspectj-autoproxy />
</beans>